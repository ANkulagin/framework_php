<?php


namespace wfm;


class App
{

    public static $app;

    public function __construct()
    {
        $query = trim(urldecode($_SERVER['QUERY_STRING']), '/');
        new ErrorHandler();
        self::$app = Registry::getInstance();
        $this->getParams();
        Router::dispatch($query);
    }

    protected function getParams()
    {
        $params = require_once CONFIG . '/params.php';
        if (!empty($params)) {
            foreach ($params as $k => $v) {
                self::$app->setProperty($k, $v);
            }
        }
    }

}




/*
 *
Данный класс App отвечает за инициализацию приложения и получение параметров конфигурации из файла params.php. Вот что делает каждый метод класса:

__construct(): Конструктор класса. При создании объекта класса App, он сразу же получает экземпляр синглтона Registry (который использует трейт TSingleton) и сохраняет его в статическое свойство self::$app. Затем вызывается метод getParams() для получения параметров из файла конфигурации.
Этот код выполняет следующие действия:

$_SERVER['QUERY_STRING'] - это встроенная PHP переменная, которая содержит строку запроса после символа "?". Например, если URL выглядит так: example.com/index.php?page=about, то $_SERVER['QUERY_STRING'] будет содержать строку "page=about".

urldecode() - это встроенная PHP функция, которая декодирует URL-кодированные символы в строке. Например, символ "+" заменяется на пробел, а %xx заменяется на соответствующий символ в кодировке UTF-8.

trim() - это встроенная PHP функция, которая удаляет пробелы и другие символы с начала и конца строки. В данном случае, она используется для удаления слешей с начала и конца строки запроса.

Таким образом, данный код удаляет слеши с начала и конца строки запроса, а затем декодирует URL-кодированные символы, чтобы получить чистую строку запроса без слешей

getParams(): Этот метод загружает параметры конфигурации из файла params.php, который предполагается хранить в директории, определенной константой CONFIG. После успешной загрузки параметров, он использует синглтон Registry (который был сохранен в self::$app в конструкторе) для сохранения каждого параметра в его свойствах. Таким образом, после выполнения этого метода, класс Registry будет содержать все параметры из файла конфигурации.

В итоге, класс App инициализирует объект синглтона Registry, который хранит все параметры конфигурации, доступные в различных частях приложения. Это обеспечивает удобный доступ к конфигурационным параметрам из любой части приложения без необходимости повторного чтения файла params.php.
 */