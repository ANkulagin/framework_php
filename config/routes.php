<?php

use wfm\Router;

Router::add('^admin/?$', ['controller' => 'Main', 'action' => 'index', 'admin_prefix' => 'admin']);
Router::add('^admin/(?P<controller>[a-z-]+)/?(?P<action>[a-z-]+)?$', ['admin_prefix' => 'admin']);

Router::add('^$', ['controller' => 'Main', 'action' => 'index']);

Router::add('^(?P<controller>[a-z-]+)/(?P<action>[a-z-]+)/?$');





/*
 * Файл routes.php содержит определение маршрутов для маршрутизатора (Router) в веб-приложении на PHP. Код в данном файле определяет различные URL-пути и их соответствующие контроллеры и действия. Давайте рассмотрим, что делает каждая строка кода:

use wfm\Router;: Эта строка указывает на использование пространства имен wfm, которое, вероятно, содержит класс Router.

Router::add('^admin/?$', ['controller'=>'Main', 'action'=>'index', 'admin_prefix'=>'admin']);: Этот вызов метода add() класса Router добавляет маршрут для URL-пути "^admin/?$". Параметр ^admin/?$ - это регулярное выражение, которое будет сопоставляться с URL запросами, начинающимися с "admin" или "admin/". В данном случае, если такой URL найден, приложение должно использовать контроллер "Main" и действие "index" с префиксом "admin" в пути.

Router::add('^admin/(?P<controller>[a-z-]+)/?(?P<action>[a-z-]+)?$', ['controller'=>'Main', 'action'=>'index', 'admin_prefix'=>'admin']);: Этот вызов метода add() также добавляет маршрут, но с более общим шаблоном для URL. Он использует именованные подмаски (?P<name>) для сопоставления контроллера и действия в URL запросе. Например, URL-путь "admin/users/edit" будет сопоставлен контроллеру "users" и действию "edit".

Router::add('^$', ['controller'=>'Main', 'action'=>'index']);: Этот вызов метода add() определяет маршрут для корневой страницы сайта (главной страницы). Если пользователь запрашивает главную страницу без каких-либо дополнительных путей, то приложение будет использовать контроллер "Main" и действие "index".

Router::add('^(?P<controller>[a-z-]+)/(?P<action>[a-z-]+)/?$');: Этот вызов метода add() определяет общий шаблон для URL, который содержит именованные подмаски для контроллера и действия. Это позволяет определить дополнительные маршруты, не указанные явно выше. Например, URL-путь "products/view" будет сопоставлен контроллеру "products" и действию "view".

Файл routes.php нужен для определения маршрутов в веб-приложении. Маршрутизация позволяет определить, какие URL-запросы должны быть обработаны какие контроллеры и действия, что позволяет строить структуру и логику веб-приложения на основе URL-адресов. Когда пользователь делает запрос на определенный URL, маршрутизатор использует определенные правила (маршруты) для определения, какой контроллер и действие должны быть вызваны для обработки запроса.

 */
